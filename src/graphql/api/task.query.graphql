# mutation createTask(
#   $assignedTo: [ID!]!
#   $room: ID!
#   $scheduleDay: DateTime!
#   $scheduleType: TaskSchedule!
#   $title: String!
#   $description: String
#   $randomlyAssign: Boolean
#   $scheduleInterval: Int!
# ) {
#   createTask(
#     assignedTo: $assignedTo
#     room: $room
#     scheduleDay: $scheduleDay
#     scheduleType: $scheduleType
#     title: $title
#     description: $description
#     randomlyAssign: $randomlyAssign
#     scheduleInterval: $scheduleInterval
#   ) {
#     ...task
#   }
# }

query getTasks($fromRooms: [ID!]) {
  getTasks(fromRooms: $fromRooms) {
    ...task
  }
}

query getTaskDetails($id: ID!) {
  getTaskDetails(id: $id) {
    ...task
  }
}

mutation deleteTask($id: ID!) {
  deleteTask(id: $id) {
    id
  }
}

mutation updateTask(
  $id: ID!
  $room: ID
  $title: String
  $randomlyAssign: Boolean
  $description: String
  $assignedTo: [ID!]
  $scheduleDay: DateTime
  $scheduleType: TaskSchedule
  $scheduleInterval: Int
) {
  updateTask(
    assignedTo: $assignedTo
    id: $id
    room: $room
    scheduleDay: $scheduleDay
    scheduleType: $scheduleType
    title: $title
    description: $description
    randomlyAssign: $randomlyAssign
    scheduleInterval: $scheduleInterval
  ) {
    ...task
  }
}

mutation updateTaskComplete($id: ID!, $completed: Boolean!) {
  updateTaskComplete(id: $id, completed: $completed) {
    ...task
  }
}

fragment task on Task {
  assignedTo {
    email
    id
    name
  }
  completionDate
  createdAt
  description
  id
  randomlyAssigned
  room {
    ...room
  }
  scheduleDay
  scheduleInterval
  scheduleType
  title
  subTasks {
    completed
    createdAt
    description
    id
  }
}
