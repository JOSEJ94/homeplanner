name: Bump Version and Commit

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number (optional)'
        required: false
      version_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      x- name: Install specific Bundler version
        run: |
          BUNDLER_VERSION=$(grep -A 1 "BUNDLED WITH" android/Gemfile.lock | tail -n 1 | xargs)
          gem install bundler -v $BUNDLER_VERSION

      - name: Install Fastlane dependencies
        run: |
          cd android
          bundle install
          cd ../ios
          bundle install
          cd ..

      - name: Determine new version
        id: determine_version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            NEW_VERSION=${{ github.event.inputs.version }}
            echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "No version provided, determining new version using version type"
          fi

      - name: Bump version using Fastlane
        run: |
          if [ -n "${{ env.NEW_VERSION }}" ]; then
            npm version env.NEW_VERSION --no-git-tag-version && (cd android && bundle exec fastlane bump) && (cd ios && bundle exec fastlane bump)
          else
            if [ "${{ github.event.inputs.version_type }}" == "patch" ]; then
              yarn bump-patch
            elif [ "${{ github.event.inputs.version_type }}" == "minor" ]; then
              yarn bump-minor
            elif [ "${{ github.event.inputs.version_type }}" == "major" ]; then
              yarn bump-major
            fi
          fi

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add package.json
          git add android/app/build.gradle
          git add ios/homeplanner/Info.plist
          git add ios/homeplanner.xcodeproj/project.pbxproj
          git add ios/homeplannerTests/Info.plist
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
          git push
